install.packages("dplyr")
install.packages("ggplot2")
install.packages("tidyr")
install.packages("purrr")
install.packages("matlib")
clear
ll
exit
install.packages("plotly")
install.packages("plotly")
install.packages("plotly")
library(dplyr)
library(plotly)
plot.ly(~volcano) %>% add_surface()
plot_ly(~volcano) %>% add_surface()
plot_ly(z = ~volcano) %>% add_surface()
library(plotly)
library(ggplot2)
library(dplyr)
plot_ly(z=~volcano) %>% add_surface()
q()
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
library("dplyr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
library("tidyr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
library("purrr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
install.packages('shiny')
getwd()\
getwd()
install.packages(c('tensorflow','keras'))
library(tensorflow)
use_condaenv('dlpy36')
library(tensorflow)
use_condaenv('dlpy36')
tf_const <- tf$constant
tf_const <- tf$constant('kjshdflkasjdhf')
sess = tf$Session()
sess$run(tf_const)
library(keras)
library(ggplot2)
library(tensorflow)
library(tensorflow)
library(keras)
library(ggplot2)
library(dplyr)
library(tidyr)
mnist_ds <- dataset_mnist()
library(keras)
mnist_ds <- dataset_mnist()
use_condaenv('dply36')
mnist_ds <- dataset_mnist()
library(tensorflow)
library(keras)
library(ggplot2)
library(dplyr)
library(tidyr)
use_condaenv('dply36')
mnist_ds <- dataset_mnist()
library(tensorflow)
library(keras)
library(ggplot2)
library(dplyr)
library(tidyr)
use_condaenv('dlpy36')
mnist_ds <- dataset_mnist()
library(tensorflow)
library(keras)
library(ggplot2)
library(dplyr)
library(tidyr)
use_condaenv('dlpy36')
mnist_ds <- dataset_mnist()
install.packages(urllib)
install.packages('urllib')
mnist_ds <- dataset_mnist()
library(tensorflow)
library(keras)
library(ggplot2)
library(dplyr)
library(tidyr)
use_condaenv('dlpy36')
mnist_ds <- dataset_mnist()
library(tensorflow)
tf_const <- tf$constant("alksdjf;la")
use_condaenv('dlpy36')
tf_const <- tf$constant("alksdjf;la")
library(tensorflow)
tf_const <- tf$constant("alksdjf;la")
library(tensorflow)
use_condaenv('dlpy36')
tf_const <- tf$constant("alksdjf;la")
sess <- tf$Session()
sess$run(tf_const)
library(tensorflow)
use_condaenv('dlpy36')
tf_const <- tf$constant("alksdjf;la")
sess <- tf$Session()
sess$run(tf_const)
iris_dataset <- iris
View(inris)
View(iris)
View(iris_dataset)
library(readr)
write_csv("iris_dataset.csv", "/home/otavio/Desktop")
write_csv(iris_dataset, "/home/otavio/Desktop/iris_dataset.csv")
IRkernel::installspec()
library(ggplot2)
library(dplyr)
library(tidyr)
library(plotly)
library(readr)
setwd("/home/otavio/Workspace/UFBA/MATE33/bayesian_learning")
dataset_dir = "/home/otavio/Workspace/UFBA/MATE33/bayesian_learning/datasets/heartbeat"
test_ds_path = paste(dataset_dir, "mitbih_test.csv", sep = "/")
train_ds_path = paste(dataset_dir, "mitbih_train.csv", sep = "/")
mitbih_train = read_csv(train_ds_path)
mitbih_test = read_csv(test_ds_path)
View(mitbih_train)
View(mitbih_test)
help("read_csv")
=
mitbih_train = read_csv(train_ds_path)
setwd("/home/otavio/Workspace/UFBA/MATE33/bayesian_learning")
dataset_dir = "/home/otavio/Workspace/UFBA/MATE33/bayesian_learning/datasets/heartbeat"
test_ds_path = paste(dataset_dir, "mitbih_test.csv", sep = "/")
train_ds_path = paste(dataset_dir, "mitbih_train.csv", sep = "/")
mitbih_train = read_csv(train_ds_path)
mitbih_test = read_csv(test_ds_path)
ncols(mitbih_train)
ncol(mitbih_train)
ncol(mitbih_test)
nrow(mitbih_train)
nrow(mitbih_test)
train_nsamples = nrow(mitbih_train)
test_nsamples = (mitbih_test)
test_nsamples = (mitbih_test)
test_nsamples = nrow(mitbih_test)
View(mitbih_test)
setwd("/home/otavio/Workspace/UFBA/MATE33/bayesian_learning")
dataset_dir = "/home/otavio/Workspace/UFBA/MATE33/bayesian_learning/datasets/heartbeat"
test_ds_path = paste(dataset_dir, "mitbih_test.csv", sep = "/")
train_ds_path = paste(dataset_dir, "mitbih_train.csv", sep = "/")
mitbih_train = read_csv(train_ds_path, col_names = F)
mitbih_test = read_csv(test_ds_path, col_names = F)
train_nsamples = nrow(mitbih_train)
test_nsamples = nrow(mitbih_test)
mitbih_test.shape
shape(mitbih_test)
ncol(mitbih_test)
nrow(mitbih_test)
